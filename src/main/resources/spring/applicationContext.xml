<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:content="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">

    <!-- Factory bean that creates the Mongo instance -->
    <mongo:mongo host="localhost" port="27017" id="mongo" />
    <mongo:db-factory dbname="UserAuth"
                      username="uafangxueshun"
                      password="ua123456"
                      mongo-ref="mongo"
                      id="mongoDbFactory" />

    <!-- MongoTemplate for connecting and quering the documents in the database -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <!--resources mapping="/resources/**" location="/resources/" /-->
    <!--<mvc:resources mapping="/*.html" location="/" />-->
    <!--<mvc:resources mapping="/*.jsp" location="/" />-->
    <!--<mvc:resources mapping="/images/**" location="/images/" />-->
    <!--resources mapping="/js/**" location="/js/" /-->

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <mvc:annotation-driven/>
    <content:component-scan base-package="cparser.web,cparser.dao,cparser.domain,cparser.sevice"/>


</beans>
